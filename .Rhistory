output <- c(p, int)
simple.lm[,dummy.name] = output
}
}
simple.lm <- data.frame() # make dataframe of p value and slope for each predictor in lm
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
output <- c(p, int)
simple.lm[,dummy.name] = output
}
}
simple.lm <- data.frame(matrix(nrows = 2, ncols = 1)) # make dataframe of p value and slope for each predictor in lm
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
output <- c(p, int)
simple.lm[,dummy.name] = output
}
}
simple.lm <- data.frame(matrix(nrows = 2, ncols = 1)) # make dataframe of p value and slope for each predictor in lm
simple.lm
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
output <- c(p, int)
simple.lm[,dummy.name] = output
}
}
simple.lm <- data.frame(matrix(nrows = 2, ncols = 13)) # make dataframe of p value and slope for each predictor in lm
# Boston.predictors <- apply(Boston, 2, function(x) ifelse(names(x)) != "crim", else...)
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
output <- c(p, int)
simple.lm[,dummy.name] = output
}
}
simple.lm <- data.frame(matrix(nrows = 2, ncols = 13)) # make dataframe of p value and slope for each predictor in lm
# Boston.predictors <- apply(Boston, 2, function(x) ifelse(names(x)) != "crim", else...)
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
output <- c(p, int)
simple.lm[,dummy.name] = output
}
}
simple.lm <- data.frame(matrix(nrows = 2, ncols = 13)) # make dataframe of p value and slope for each predictor in lm
# Boston.predictors <- apply(Boston, 2, function(x) ifelse(names(x)) != "crim", else...)
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
output <- c(p, int)
# simple.lm[,dummy.name] = output
}
}
simple.lm <- data.frame(matrix(nrows = 2, ncols = 13)) # make dataframe of p value and slope for each predictor in lm
# Boston.predictors <- apply(Boston, 2, function(x) ifelse(names(x)) != "crim", else...)
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
output <- c(p, int)
names(simple.lm[i]) = dummy.name
simple.lm[1,dummy.name] = p
simple.lm[2,dummy.name] = int
}
}
simple.lm <- data.frame(matrix(nrows = 2, ncols = 13)) # make dataframe of p value and slope for each predictor in lm
# Boston.predictors <- apply(Boston, 2, function(x) ifelse(names(x)) != "crim", else...)
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
output <- c(p, int)
names(simple.lm[i]) = dummy.name
simple.lm[1, i] = p
simple.lm[2, i] = int
}
}
simple.lm <- data.frame(matrix(nrows = 2, ncols = 13)) # make dataframe of p value and slope for each predictor in lm
# Boston.predictors <- apply(Boston, 2, function(x) ifelse(names(x)) != "crim", else...)
rownames(simple.lm) <- c[p, int]
for (i in seq(1,14)){
if (names(Boston[i]) != "crim") {
feature.name <- names(Boston[i])
dummy.name <- paste0("lm.",feature.name)
df <- data.frame(Boston$crim, Boston[i])
p <- summary.lm(lm(Boston.crim ~ .,df) )$coefficients[ feature.name, "Pr(>|t|)"]
int <- summary.lm(lm(Boston.crim ~.,df) )$coefficients[ feature.name, "Estimate"]
names(simple.lm[i]) = dummy.name
simple.lm[1, i] = p
simple.lm[2, i] = int
}
}
rm(list=ls())
library(Boston)
library(MASS)
?fix
summary(mtcars)
data()
data(Boston)
Boston.no.crim <- data.frame(Boston[,seq(2,14)])
simple.lm <- data.frame() # make dataframe of p value and slope for each predictor in lm
rownames(simple.lm) <- c[p, int]
for (i in seq(1,13)){
feature.name <- names(Boston.no.crim[i])
df <- data.frame(Boston["crim"], Boston.no.crim[feature.name])
dummy.name <- paste0("lm.",feature.name)
# print(names(df))
fit <- lm(crim ~ ., df)
# plot(fit)
simple.lm[1,i] <- summary.lm(fit)$coefficients[ feature.name, "Pr(>|t|)"]
simple.lm[2,i] <- summary.lm(fit)$coefficients[ feature.name, "Estimate"]
names(simple.lm)[i] <- dummy.name
}
rownames(simple.lm) <- c("p", "est")
simple.lm
Boston.no.crim <- data.frame(Boston[,seq(2,14)])
simple.lm <- data.frame() # make dataframe of p value and slope for each predictor in lm
rownames(simple.lm) <- c[p, int]
for (i in seq(1,13)){
feature.name <- names(Boston.no.crim[i])
df <- data.frame(Boston["crim"], Boston.no.crim[feature.name])
dummy.name <- paste0("lm.",feature.name)
# print(names(df))
fit <- lm(crim ~ ., df)
# plot(fit)
simple.lm[1,i] <- summary.lm(fit)$coefficients[ feature.name, "Pr(>|t|)"]
simple.lm[2,i] <- summary.lm(fit)$coefficients[ feature.name, "Estimate"]
names(simple.lm)[i] <- dummy.name
}
rownames(simple.lm) <- c("p", "est")
simple.lm
Boston.no.crim <- data.frame(Boston[,seq(2,14)])
simple.lm <- data.frame() # make dataframe of p value and slope for each predictor in lm
for (i in seq(1,13)){
feature.name <- names(Boston.no.crim[i])
df <- data.frame(Boston["crim"], Boston.no.crim[feature.name])
dummy.name <- paste0("lm.",feature.name)
# print(names(df))
fit <- lm(crim ~ ., df)
# plot(fit)
simple.lm[1,i] <- summary.lm(fit)$coefficients[ feature.name, "Pr(>|t|)"]
simple.lm[2,i] <- summary.lm(fit)$coefficients[ feature.name, "Estimate"]
names(simple.lm)[i] <- dummy.name
}
rownames(simple.lm) <- c("p", "est")
simple.lm
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
simple.lm[3,i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
rownames(simple.lm)[3] <- "multi.est"
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
plot(cest, cmulti.est)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
simple.lm[3,i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
rownames(simple.lm)[3] <- "multi.est"
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
plot(est, cmulti.est)
View(simple.lm)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
simple.lm[3,i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
rownames(simple.lm)[3] <- "multi.est"
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
plot(est, multi.est)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
simple.lm[3,i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
rownames(simple.lm)[3] <- "multi.est"
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
# plot(est, multi.est)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
simple.lm[3,i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
rownames(simple.lm)[3] <- "multi.est"
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
# plot(est, multi.est)
multi.est <- matrix(nrow = 1, ncol = 13)
rownames(multi.est) <- "multi.est"
View(multi.est)
colnames(multi.est) <- colnames(simple.lm)
View(multi.est)
multi.est <- matrix(nrow = 1, ncol = 13)
rownames(multi.est) <- "multi.est"
colnames(multi.est) <- colnames(simple.lm)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
multi.est[i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
simple.lm <- rbind(simple.lm, multi.est)
# multi.est = c(simple.lm["multi.est",])
# est = c(simple.lm["est",])
# plot(est, multi.est)
summary.lm(fit)$coefficients[feature.name, "Estimate"]
View(Boston)
summary.lm(fit)$coefficients[zn, "Estimate"]
fit
summary(fit)
fit <- lm(crim~., Boston)
summary(fit)
multi.est <- matrix(nrow = 1, ncol = 13)
rownames(multi.est) <- "multi.est"
colnames(multi.est) <- colnames(simple.lm)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
multi.est[i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
simple.lm <- rbind(simple.lm, multi.est)
# multi.est = c(simple.lm["multi.est",])
# est = c(simple.lm["est",])
# plot(est, multi.est)
multi.est <- matrix(nrow = 1, ncol = 13)
rownames(multi.est) <- "multi.est"
colnames(multi.est) <- colnames(simple.lm)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
multi.est[i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
simple.lm <- rbind(simple.lm, multi.est)
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
plot(est, multi.est)
Boston.no.crim <- data.frame(Boston[,seq(2,14)])
simple.lm <- data.frame() # make dataframe of p value and slope for each predictor in lm
for (i in seq(1,13)){
feature.name <- names(Boston.no.crim[i])
df <- data.frame(Boston["crim"], Boston.no.crim[feature.name])
dummy.name <- paste0("lm.",feature.name)
# print(names(df))
fit <- lm(crim ~ ., df)
# plot(fit)
simple.lm[1,i] <- summary.lm(fit)$coefficients[ feature.name, "Pr(>|t|)"]
simple.lm[2,i] <- summary.lm(fit)$coefficients[ feature.name, "Estimate"]
names(simple.lm)[i] <- dummy.name
}
rownames(simple.lm) <- c("p", "est")
simple.lm
fit <- lm(crim~., Boston)
summary(fit)
multi.est <- matrix(nrow = 1, ncol = 13)
rownames(multi.est) <- "multi.est"
simple.lm <- rbind(simple.lm, multi.est)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
multi.est[i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
plot(est, multi.est)
multi.est <- matrix(nrow = 1, ncol = 13)
rownames(multi.est) <- "multi.est"
colnames(multi.est) <- colnames(simple.lm)
simple.lm <- rbind(simple.lm, multi.est)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
multi.est[i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
plot(est, multi.est)
multi.est <- matrix(nrow = 1, ncol = 13)
rownames(multi.est) <- "multi.est"
colnames(multi.est) <- colnames(simple.lm)
simple.lm <- rbind(simple.lm, multi.est)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
simple.lm[3,i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
plot(est, multi.est)
Boston.no.crim <- data.frame(Boston[,seq(2,14)])
simple.lm <- data.frame() # make dataframe of p value and slope for each predictor in lm
for (i in seq(1,13)){
feature.name <- names(Boston.no.crim[i])
df <- data.frame(Boston["crim"], Boston.no.crim[feature.name])
dummy.name <- paste0("lm.",feature.name)
# print(names(df))
fit <- lm(crim ~ ., df)
# plot(fit)
simple.lm[1,i] <- summary.lm(fit)$coefficients[ feature.name, "Pr(>|t|)"]
simple.lm[2,i] <- summary.lm(fit)$coefficients[ feature.name, "Estimate"]
names(simple.lm)[i] <- dummy.name
}
rownames(simple.lm) <- c("p", "est")
simple.lm
fit <- lm(crim~., Boston)
summary(fit)
multi.est <- matrix(nrow = 1, ncol = 13)
rownames(multi.est) <- "multi.est"
colnames(multi.est) <- colnames(simple.lm)
simple.lm <- rbind(simple.lm, multi.est)
for (i in seq(1:13)){
feature.name <- names(Boston.no.crim[i])
simple.lm[3,i] <- summary.lm(fit)$coefficients[feature.name, "Estimate"]
}
multi.est = c(simple.lm["multi.est",])
est = c(simple.lm["est",])
plot(est, multi.est)
for (i in seq(1,13)){
feature.name <- names(Boston.no.crim[i])
df <- data.frame(Boston["crim"], Boston.no.crim[feature.name], Boston.no.crim[feature.name]^2, Boston.no.crim[feature.name]^3)
fit <- lm(crim ~ ., df)
simple.lm[4,i] <- summary.lm(fit)$coefficients[ feature.name, "Pr(>|t|)"]
simple.lm[5,i] <- summary.lm(fit)$coefficients[ feature.name, "Estimate"]
simple.lm[6,i] <- simple.lm[1,i] / simple.lm[4,i]
}
rownames(simple.lm) <- c("p", "est", "multi.est", "cubic.p", "cubit.est", "p/cubic.p")
simple.lm
apply(t_feat3, 2, mean)
rm(list = ls())
t_feat <- read.csv('../ALS-kaggle-comp/training_features.csv')
t_feat <- read.csv('~/Dropbox/classes/STATs 202 data mining and analysis/ALS-kaggle-comp/training_features.csv')
t_feat <- as.data.frame(lapply(t_feat, function(x) {x[is.na(x)] <- median(x, na.rm=TRUE); x}))
t_feat2 <- t_feat[t_feat$subject.id!=525450,]
t_feat3 <- t_feat2[,c("q1_speech.slope", "q2_salivation.slope", "q3_swallowing.slope", "q4_handwriting.slope", "q5a_cutting_without_gastrostomy.slope", "q6_dressing_and_hygiene.slope", "q7_turning_in_bed.slope", "q8_walking.slope", "q9_climbing_stairs.slope")]
apply(t_feat3, 2, mean)
apply(t_feat3, 2, sd)
apply(t_feat3, 2, mean)
pr.out <- prcomp(t_feat3, scale = TRUE)
plot(pr.out)
summary(pr.out)
names(pr.out)
apply(t_feat3, 2, mean)
pr.out <- prcomp(t_feat3, scale = TRUE)
pr.out$center
pr.out$scale
dim(pr.out$x)
dim(pr.out$rotation)
names(pr.out)
apply(t_feat3, 2, mean)
pr.out <- prcomp(t_feat3, scale = TRUE)
#pr.out$center means
#pr.out$scale stdevs
biplot(pr.out, scale = 0)
apply(t_feat3, 2, mean)
pr.out <- prcomp(t_feat3, scale = TRUE)
names(pr.out)
biplot(pr.out, scale = 0)
# check proportion of variance explained by each principle component
pr.var <- pr.out$sdev^2
pv.explained <- pr.var/sum(pr.var)
pv.explained
plot(pv.explained)
pr.var <- pr.out$sdev^2
pv.explained <- pr.var/sum(pr.var)
plot(cumsum(pv.explained), xlab='Principle Component', ylab='Cumulative Proportion of Variance Explained')
sum(pr.var[1:2])
sum(pr.var[1:2])/sum(pr.var)
pr.var
?biplot
biplot(pr.out, scale = 0, cex = rep(par("cex"), 2))
?cex
biplot(pr.out, scale = 0, cex = 2)
biplot(pr.out, scale = 0, cex = .2)
biplot(pr.out, scale = 0, cex = .5)
biplot(pr.out, scale = 0, cex = .7)
biplot(pr.out, scale = 0, cex = .5)
t_feat4 <- t_feat1[,c("q1_speech.slope", "q2_salivation.slope", "q3_swallowing.slope", "q4_handwriting.slope", "q5a_cutting_without_gastrostomy.slope", "q6_dressing_and_hygiene.slope", "q7_turning_in_bed.slope", "q8_walking.slope", "q9_climbing_stairs.slope")]
pr.out <- prcomp(t_feat4, scale = TRUE)
pr.var <- pr.out$sdev^2
pv.explained <- pr.var/sum(pr.var)
plot(cumsum(pv.explained), xlab='Principle Component', ylab='Cumulative Proportion of Variance Explained')
t_feat4 <- t_feat1[,c("q1_speech.slope", "q2_salivation.slope", "q3_swallowing.slope", "q4_handwriting.slope", "q5a_cutting_without_gastrostomy.slope", "q6_dressing_and_hygiene.slope", "q7_turning_in_bed.slope", "q8_walking.slope", "q9_climbing_stairs.slope")]
pr.out <- prcomp(t_feat4, scale = TRUE)
pr.var <- pr.out$sdev^2
pv.explained <- pr.var/sum(pr.var)
plot(cumsum(pv.explained), xlab='Principle Component', ylab='Cumulative Proportion of Variance Explained')
biplot(pr.out, scale = 0, cex = .5)
t_feat4 <- t_feat[,c("q1_speech.slope", "q2_salivation.slope", "q3_swallowing.slope", "q4_handwriting.slope", "q5a_cutting_without_gastrostomy.slope", "q6_dressing_and_hygiene.slope", "q7_turning_in_bed.slope", "q8_walking.slope", "q9_climbing_stairs.slope")]
pr.out <- prcomp(t_feat4, scale = TRUE)
pr.var <- pr.out$sdev^2
pv.explained <- pr.var/sum(pr.var)
plot(cumsum(pv.explained), xlab='Principle Component', ylab='Cumulative Proportion of Variance Explained')
# biplot(pr.out, scale = 0, cex = .5)
t_feat4 <- t_feat[,c("q1_speech.slope", "q2_salivation.slope", "q3_swallowing.slope", "q4_handwriting.slope", "q5a_cutting_without_gastrostomy.slope", "q6_dressing_and_hygiene.slope", "q7_turning_in_bed.slope", "q8_walking.slope", "q9_climbing_stairs.slope")]
pr.out <- prcomp(t_feat4, scale = TRUE)
pr.var <- pr.out$sdev^2
pv.explained <- pr.var/sum(pr.var)
plot(cumsum(pv.explained), xlab='Principle Component', ylab='Cumulative Proportion of Variance Explained')
biplot(pr.out, scale = 0, cex = .5)
t_feat[t_feat$subject.id=525450,]
t_feat$subject.id=525450
t_feat <- read.csv('~/Dropbox/classes/STATs 202 data mining and analysis/ALS-kaggle-comp/training_features.csv')
t_feat <- as.data.frame(lapply(t_feat, function(x) {x[is.na(x)] <- median(x, na.rm=TRUE); x}))
t_feat2 <- t_feat[t_feat$subject.id!=525450,]
View(t_feat)
mean(t_feat$onset_site.Limb_and_Bulbar)
1/858
View(t_feat4)
t_feat4[1272:1276,]
rbind(t_feat[1273,], apply(t_feat, 2, mean), apply(t_feat, 2, sd))
rbind(t_feat4[1273,], apply(t_feat4, 2, mean), apply(t_feat4, 2, sd))
anomaly <- rbind(t_feat4[1273,], apply(t_feat4, 2, mean), apply(t_feat4, 2, sd))
colnames(anomaly) <- c["patient.values", "mean", "sd"]
anomaly <- rbind(t_feat4[1273,], apply(t_feat4, 2, mean), apply(t_feat4, 2, sd))
colnames(anomaly) <- c("patient.values", "mean", "sd")
anomaly <- rbind(t_feat4[1273,], apply(t_feat4, 2, mean), apply(t_feat4, 2, sd))
colnames(anomaly) <- c("patient.values", "mean", "sd")
anomaly
anomaly <- rbind(t_feat4[1273,], apply(t_feat4, 2, mean), apply(t_feat4, 2, sd))
rownames(anomaly) <- c("patient.values", "mean", "sd")
anomaly
data()
data("ChickWeight")
rm(list=ls()
rm(list=ls())
rm(list=ls())
data("ChickWeight")
data(ChickWeight)
data(Nile)
fit(Nile)
library(MASS)
data()
library(datasets)
data("ChickWeight")
data(ChickWeight)
data(Boston)
fit(Boston)
data(Aids2)
fit(Aids2)
View(Aids2)
View(ChickWeight)
?ChickWeight
wt.0 <- data.frame[ChickWeight$Time=0,weight]
wt.0 <- data.frame[ChickWeight$Time!=0,weight]
wt.0 <- data.frame[ChickWeight$Time!=0,"weight"]
wt.0 <- data.frame[ChickWeight$Time!=0,ChickWeight$weight]
plot(ChickWeight$weight, ChickWeight$Time)
x = seq(1:10) + rnorm(1)
x
x = seq(1:10)
dx = rnorm(10)
x = x + dx
x
y = seq(1:10)/3 + 5
y
dy = rnorm(10)/3
y = y + dy
y
z = rnorm(10)*10 + 50
z
rm(list=ls())
t_feat = read.csv('../training_features.csv')
t_targ = read.csv('../training_target.csv')
v_feat = read.csv('../validation_features.csv')
v_targ = read.csv('../validation_target.csv')
t_feat = read.csv('../training_features.csv')
t_targ = read.csv('../training_target.csv')
v_feat = read.csv('../validation_features.csv')
v_targ = read.csv('../validation_target.csv')
setwd("~/Dropbox/classes/STATs 202 data mining and analysis/ALS-kaggle-comp/KaggleComp")
t_feat = read.csv('../training_features.csv')
t_targ = read.csv('../training_target.csv')
v_feat = read.csv('../validation_features.csv')
v_targ = read.csv('../validation_target.csv')
rm(list=ls())
t_feat = read.csv('../training_features.csv')
t_targ = read.csv('../training_target.csv')
v_feat = read.csv('../validation_features.csv')
v_targ = read.csv('../validation_target.csv')
